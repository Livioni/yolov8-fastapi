{"openapi": "3.0.2", "info": {"title": "Object Detection FastAPI Template", "description": "Obtain object value out of image\n                    and return image and json result", "version": "2023.1.31"}, "paths": {"/healthcheck": {"get": {"summary": "Perform Healthcheck", "description": "It basically sends a GET request to the route & hopes to get a \"200\"\nresponse code. Failing to return a 200 response code just enables\nthe GitHub Actions to rollback to the last version the project was\nfound in a \"working condition\". It acts as a last line of defense in\ncase something goes south.\nAdditionally, it also returns a JSON response in the form of:\n{\n    'healtcheck': 'Everything OK!'\n}", "operationId": "perform_healthcheck_healthcheck_get", "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}}}}, "/img_object_detection_to_json": {"post": {"summary": "Img Object Detection To Json", "description": "Object Detection from an image.\n\nArgs:\n    file (bytes): The image file in bytes format.\nReturns:\n    dict: JSON format containing the Objects Detections.", "operationId": "img_object_detection_to_json_img_object_detection_to_json_post", "requestBody": {"content": {"multipart/form-data": {"schema": {"$ref": "#/components/schemas/Body_img_object_detection_to_json_img_object_detection_to_json_post"}}}, "required": true}, "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/img_object_detection_to_img": {"post": {"summary": "Img Object Detection To Img", "description": "Object Detection from an image plot bbox on image\n\nArgs:\n    file (bytes): The image file in bytes format.\nReturns:\n    Image: Image in bytes with bbox annotations.", "operationId": "img_object_detection_to_img_img_object_detection_to_img_post", "requestBody": {"content": {"multipart/form-data": {"schema": {"$ref": "#/components/schemas/Body_img_object_detection_to_img_img_object_detection_to_img_post"}}}, "required": true}, "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/batch_inference/": {"post": {"summary": "Batch Inference", "description": "Object Detection from a batch\n\nArgs:\n    batch (Json):     data: List #the list of images \n                      shape: Tuple #the images shape    \nReturns:\n     dict: JSON format containing the Objects Detections.", "operationId": "batch_inference_batch_inference__post", "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/Batch"}}}, "required": true}, "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/uploadfiles/": {"post": {"summary": "Create Upload Files", "operationId": "create_upload_files_uploadfiles__post", "requestBody": {"content": {"multipart/form-data": {"schema": {"$ref": "#/components/schemas/Body_create_upload_files_uploadfiles__post"}}}, "required": true}, "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/full/": {"post": {"summary": "Create Upload Files", "operationId": "create_upload_files_full__post", "requestBody": {"content": {"multipart/form-data": {"schema": {"$ref": "#/components/schemas/Body_create_upload_files_full__post"}}}, "required": true}, "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/single_image/": {"post": {"summary": "Create Upload Files", "operationId": "create_upload_files_single_image__post", "requestBody": {"content": {"multipart/form-data": {"schema": {"$ref": "#/components/schemas/Body_create_upload_files_single_image__post"}}}, "required": true}, "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}}, "components": {"schemas": {"Batch": {"title": "Batch", "required": ["data", "shape"], "type": "object", "properties": {"data": {"title": "Data", "type": "array", "items": {}}, "shape": {"title": "Shape", "type": "array", "items": {}}}}, "Body_create_upload_files_full__post": {"title": "Body_create_upload_files_full__post", "required": ["files"], "type": "object", "properties": {"files": {"title": "Files", "type": "array", "items": {"type": "string", "format": "binary"}}}}, "Body_create_upload_files_single_image__post": {"title": "Body_create_upload_files_single_image__post", "required": ["files"], "type": "object", "properties": {"files": {"title": "Files", "type": "array", "items": {"type": "string", "format": "binary"}}}}, "Body_create_upload_files_uploadfiles__post": {"title": "Body_create_upload_files_uploadfiles__post", "required": ["files"], "type": "object", "properties": {"files": {"title": "Files", "type": "array", "items": {"type": "string", "format": "binary"}}}}, "Body_img_object_detection_to_img_img_object_detection_to_img_post": {"title": "Body_img_object_detection_to_img_img_object_detection_to_img_post", "required": ["file"], "type": "object", "properties": {"file": {"title": "File", "type": "string", "format": "binary"}}}, "Body_img_object_detection_to_json_img_object_detection_to_json_post": {"title": "Body_img_object_detection_to_json_img_object_detection_to_json_post", "required": ["file"], "type": "object", "properties": {"file": {"title": "File", "type": "string", "format": "binary"}}}, "HTTPValidationError": {"title": "HTTPValidationError", "type": "object", "properties": {"detail": {"title": "Detail", "type": "array", "items": {"$ref": "#/components/schemas/ValidationError"}}}}, "ValidationError": {"title": "ValidationError", "required": ["loc", "msg", "type"], "type": "object", "properties": {"loc": {"title": "Location", "type": "array", "items": {"anyOf": [{"type": "string"}, {"type": "integer"}]}}, "msg": {"title": "Message", "type": "string"}, "type": {"title": "Error Type", "type": "string"}}}}}}